<project name="Fftri" default="all" basedir=".">
	<property file="./build.properties" />
    <available file="/var/lib/jenkins/db.properties" type="file" property="db.properties.exist"/>
    <if>
        <isset property="db.properties.exist" />
        <then>
            <property file="/var/lib/jenkins/db.properties" />
        </then>
    </if>

	<target name="clean">
		<delete dir="${dir.output}" />
	</target>

	<target name="prepare" depends="clean">
		<mkdir dir="${dir.output}" />
		<mkdir dir="${dir.reports}" />
		<mkdir dir="${dir.tmp}" />
	</target>

    <target name="prepare-env">
        <taskdef name="sync" classname="phing.tasks.ext.FileSyncTask" />
        <if>
            <isset property="env" />
            <then>
                <sync sourcedir="./resources/${env}/"
                      options="-urpKz"
                      destinationdir="./" />
            </then>
        </if>
    </target>

    <target name="install-dependencies" depends="prepare, prepare-env">
        <exec command="${composer} install" passthru="true" />
        <exec command="${composer} update" passthru="true" />
    </target>

    <target name="phpunit">
        <mkdir dir="${phpunit.coverage.html}" />
        <exec dir="./module/Application/tests"
              command="phpunit ." />
    </target>

	<target name="phpcs">
		<mkdir dir="${phpcs.output.xml.dir}" />
		<mkdir dir="${phpcs.output.html.dir}" />
		<exec command="${phpcs.exec} ${phpcs.args}" dir="${project.basedir}"
			passthru="true" />
		<xslt file="${phpcs.output.xml.file}" tofile="${phpcs.output.html.file}"
			style="${phpcs.style}" />
	</target>

    <target name="phpmd">
        <mkdir dir="${phpmd.output.xml.dir}" />
        <mkdir dir="${phpmd.output.html.dir}" />
        <exec command="${phpmd.exec} ${phpmd.args}" dir="${project.basedir}"
              passthru="true" />
        <xslt file="${phpmd.output.xml.file}" tofile="${phpmd.output.html.file}"
              style="${phpmd.style}" />
    </target>

	<target name="phpcpd">
		<mkdir dir="${phpcpd.output.xml.dir}" />
		<mkdir dir="${phpcpd.output.html.dir}" />
		<exec command="${phpcpd.exec} ${phpcpd.args}" dir="${project.basedir}"
			passthru="true" />
		<xslt file="${phpcpd.output.xml.file}" tofile="${phpcpd.output.html.file}"
			style="${phpcpd.style}" />
	</target>

    <target name="phpdepend">
        <mkdir dir="${phpdepend.output.xml.dir}" />
        <mkdir dir="${phpdepend.output.html.dir}" />
        <exec command="${phpdepend.exec} ${phpdepend.args}" dir="${project.basedir}"
			passthru="true" />
        <xslt file="${phpdepend.output.xml.file}" tofile="${phpdepend.output.html.file}"
			style="${phpdepend.style}" />
    </target>

	<target name="phpdoc">
		<mkdir dir="${phpdoc.output.html.dir}" />
		<exec command="${phpdoc.exec} ${phpdoc.args}" dir="${project.basedir}"
			passthru="true" />
	</target>

    <target name="sync">
        <taskdef name="sync" classname="phing.tasks.ext.FileSyncTask" />
        <sync delete="true"
              sourcedir="./"
              options="-e 'ssh -p ${deploy.port}' -lurpKz"
              excludefile="${deploy.exclude}"
              destinationdir="${deploy.user}@${deploy.host}:${deploy.path}/" />
    </target>

    <target name="database">
        <exec command="cd data/db &amp;&amp; echo *.sql" escape="false" outputProperty="db.files" />
        <pdosqlexec url="mysql:host=${deploy.host}" userid="${db.username}" password="${db.password}">
            <filelist dir="data/db" files="${db.files}" />
        </pdosqlexec>
    </target>

    <target name="database-import-sample">
        <exec command="cd data/db/sample &amp;&amp; echo *.sql" escape="false" outputProperty="db.export.files" />
        <pdosqlexec url="mysql:host=${deploy.host}" userid="${db.username}" password="${db.password}">
            <filelist dir="data/db/sample" files="${db.export.files}" />
        </pdosqlexec>
    </target>

    <target name="doctrine">
        <exec command="ssh -p${deploy.port} ${deploy.user}@${deploy.host} 'cd ${deploy.path} &amp;&amp; ${dir.vendor}/bin/doctrine-module orm:schema-tool:update --force'" passthru="true" />
    </target>

    <target name="reset-db" depends="database, database-import-sample, doctrine">
        <exec command="${dir.vendor}/bin/doctrine-module orm:schema-tool:update --force" passthru="true" />
    </target>

	<target name="all" depends="test, report" />
	<target name="test" depends="install-dependencies, phpunit" />
	<target name="report"
		    depends="phpmd, phpcpd, phpdepend" />
    <target name="deploy" depends="database, sync, doctrine" />
</project>